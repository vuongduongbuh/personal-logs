{"version":3,"sources":["app-constant.js","app-router.js","app-service.js","app.js","environment.js","main.js","resources/index.js","modules/feed/feed.js","modules/home/home.js","modules/search/search.js","services/authService/auth-service.js","styles/_pl-container.scss","modules/feed/feed.scss","modules/home/home.scss","modules/search/search.scss"],"names":["AppConstants","auth0Domain","auth0ClientId","baseUrl","assetsUrl","AppRouter","config","title","options","pushState","map","route","moduleId","settings","auth","_","AppService","AuthService","httpClient","configure","withBaseUrl","withDefaults","credentials","headers","localStorage","getItem","withInterceptor","request","response","status","login","getFeeds","fetch","method","then","data","json","createNewFeed","feed","form","FormData","forEach","value","key","append","body","deleteFeed","id","search","input","encodeURIComponent","App","authService","console","log","configureRouter","router","mapUnknownRoutes","appTitle","debug","testing","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","Feed","Home","Search","jwt_decode","Router","auth0lock","auth0lockPasswordless","auth0Options","closable","language","theme","logo","primaryColor","languageDictionary","emailInputPlaceholder","forgotPasswordAction","responseType","redirect","params","scope","Auth0Lock","_registerAuthenticationListener","on","authResult","getProfile","idToken","error","profile","setItem","JSON","stringify","hide","navigate","show","logout","removeItem","isTokenValid","resolve","reject","token","jwtExp","exp","expiryDate","Date","setUTCSeconds","showLoginIfUnauthorized","catch"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export const AppConstants = {\r\n    auth0Domain: 'personallog.eu.auth0.com',\r\n    auth0ClientId: 'G4wIF5AYeG9Dtu4Y5yuOuXFrUYUzfLVu',\r\n    baseUrl: \"http://localhost:3008/api/v1/\",\r\n    assetsUrl: \"http://localhost:3008/images\"\r\n};","export function AppRouter(config) {\r\n    config.title = 'Personal Log';\r\n    config.options.pushState = true;\r\n\r\n    config.map([\r\n        { route: '', moduleId: 'modules/home/home', title: 'Home' },\r\n        { route: 'home', moduleId: 'modules/home/home', title: 'Home' },\r\n        { route: 'feeds', moduleId: 'modules/feed/feed', title: 'Feeds', settings: { auth: true } },\r\n        { route: 'search', moduleId: 'modules/search/search', title: 'Search', settings: { auth: true } }\r\n    ]);\r\n}","import { inject } from 'aurelia-framework';\r\nimport { AppConstants } from './app-constant';\r\nimport { HttpClient, json, Interceptor } from 'aurelia-fetch-client';\r\nimport { AuthService } from './services/authService/auth-service';\r\nimport * as _ from 'lodash';\r\n\r\n@inject(AuthService)\r\nexport class AppService {\r\n    constructor(AuthService) {\r\n        this.httpClient = new HttpClient();\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(AppConstants.baseUrl)\r\n                .withDefaults({\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Authorization': 'Bearer ' + localStorage.getItem(\"id_token\")\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        return request;\r\n                    },\r\n                    response(response) {\r\n                        if (response.status == 401) {\r\n                            AuthService.login();\r\n                        }\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    getFeeds() {\r\n        return this.httpClient.fetch(\"feeds\", {\r\n            method: \"get\"\r\n        }).then(data => data.json());\r\n    }\r\n\r\n    createNewFeed(feed) {\r\n        let form = new FormData()\r\n        _.forEach(feed, (value, key) => {\r\n            form.append(key, value);\r\n        });\r\n\r\n        return this.httpClient.fetch(\"feeds\", {\r\n            method: 'post',\r\n            body: form\r\n        }).then(data => data.json());\r\n    }\r\n\r\n    deleteFeed(id) {\r\n        return this.httpClient.fetch(\"feeds/\" + id, {\r\n            method: \"delete\"\r\n        });\r\n    }\r\n\r\n    search(input) {\r\n        return this.httpClient.fetch(\"feeds/\" + encodeURIComponent(input), {\r\n            method: 'get'\r\n        }).then(data => data.json());\r\n    }\r\n}","import { inject } from 'aurelia-framework';\nimport { Router, Redirect } from 'aurelia-router';\nimport { AppConstants } from './app-constant';\nimport { AuthService } from './services/authService/auth-service';\n\n@inject(AuthService)\nexport class App {\n  constructor(AuthService) {\n    this.authService = AuthService;\n    console.log(\"AAAA\");\n    //AuthService.login();\n  }\n\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Personal Log';\n    config.map([\n      { route: '', moduleId: 'modules/home/home', title: 'Home' },\n      { route: 'home', moduleId: 'modules/home/home', title: 'Home' },\n      { route: 'feeds', moduleId: 'modules/feed/feed', title: 'Feeds', settings: { auth: true } },\n      { route: 'search', moduleId: 'modules/search/search', title: 'Search', settings: { auth: true } }\n    ]);\n\n    config.mapUnknownRoutes('not-found');\n    this.appTitle = config.title;\n  }\n}\n\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Feed {\r\n    constructor() {\r\n        console.log(\"Feed\");\r\n    }\r\n}","export class Home {\r\n    constructor() {\r\n        console.log(\"Home\");\r\n    }\r\n}","export class Search {\r\n    constructor() {\r\n        console.log(\"Search\");\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport * as jwt_decode from 'jwt-decode';\r\nimport { Router, Redirect } from 'aurelia-router';\r\nimport { AppConstants } from '../../app-constant';\r\n\r\n@inject(Router)\r\nexport class AuthService {\r\n  constructor(Router) {\r\n    this.auth0lock = {};\r\n    this.router = Router;\r\n    this.auth0lockPasswordless = {};\r\n    this.auth0Options = {\r\n      closable: false,\r\n      language: 'de',\r\n      theme: {\r\n        logo: '/assets/img/icon-naw.jpg',\r\n        primaryColor: '#D11E33'\r\n      },\r\n      languageDictionary: {\r\n        emailInputPlaceholder: \"max.meier@nowatwork.ch\",\r\n        title: \"now@work\",\r\n        forgotPasswordAction: \"Passwort vergessen? Zum ersten Mal hier?\"\r\n      },\r\n      auth: {\r\n        responseType: 'token',\r\n        redirect: false,\r\n        params: {\r\n          scope: 'openid picture email name nickname auth'\r\n        }\r\n      }\r\n    };\r\n\r\n    this.auth0lock = new Auth0Lock(AppConstants.auth0ClientId, AppConstants.auth0Domain);\r\n\r\n    //register callback\r\n    this._registerAuthenticationListener();\r\n  }\r\n\r\n  _registerAuthenticationListener() {\r\n    this.auth0lock.on(\"authenticated\", (authResult) => {\r\n      this.auth0lock.getProfile(authResult.idToken, (error, profile) => {\r\n        if (error) {\r\n          // Handle error\r\n          return;\r\n        }\r\n\r\n        localStorage.setItem('id_token', authResult.idToken);\r\n        localStorage.setItem('profile', JSON.stringify(profile));\r\n        this.auth0lock.hide();\r\n        this.router.navigate('feeds');\r\n      });\r\n    });\r\n  }\r\n\r\n  login() {\r\n    this.auth0lock.show();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('profile');\r\n    localStorage.removeItem('id_token');\r\n  }\r\n\r\n  isTokenValid() {\r\n    return new Promise((resolve, reject) => {\r\n      let token = localStorage.getItem('id_token');\r\n      if (!token) {\r\n        return reject();\r\n      }\r\n\r\n      //Check if token is expired\r\n      let jwtExp = jwt_decode(token).exp;\r\n      let expiryDate = new Date(0);\r\n      expiryDate.setUTCSeconds(jwtExp);\r\n\r\n      if (new Date() < expiryDate) {\r\n        return reject();\r\n      }\r\n\r\n      return resolve();\r\n    });\r\n  }\r\n\r\n  showLoginIfUnauthorized() {\r\n    this.isTokenValid().then(() => {\r\n      this.router.navigate('feeds');\r\n    }).catch((error) => {\r\n      return this.login();\r\n    });\r\n  }\r\n}",".pl-container {\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    min-width: 1024px;\r\n}","",".pl-home {\r\n    \r\n}",""],"sourceRoot":"../src"}